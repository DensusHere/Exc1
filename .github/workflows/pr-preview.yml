name: PR Preview

on:
  pull_request:

env:
  PERCY_POSTINSTALL_BROWSER: true
  GH_PAGES_OWNER: blackbaud
  GH_PAGES_REPO: skyux-pr-preview

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install-deps:
    name: Install and cache dependencies
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.affected.outputs.projects }}
      e2eMap: ${{ steps.affected.outputs.e2eMap }}
      base: ${{ steps.setSHAs.outputs.base }}
      head: ${{ steps.setSHAs.outputs.head }}
    steps:
      - uses: actions/checkout@v3
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            !node_modules/.cache/nx
            /home/runner/.cache/Cypress
          key: cache-pr-preview-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          set -x
          node ./scripts/rebase-pr.js
          npm ci
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: setSHAs
        uses: nrwl/nx-set-shas@v2
      - name: Check affected
        id: affected
        run: |
          set -x
          npx nx print-affected --target=build-storybook | jq -cr '.tasks | map(.target.project) | map(select(. != "storybook"))' > ${{ runner.temp }}/affected.json
          cat ${{ runner.temp }}/affected.json | npx ts-node scripts/pr-preview-e2e-matrix.ts > ${{ runner.temp }}/affected-e2e-matrix.json
          echo -n "::set-output name=projects::"
          cat ${{ runner.temp }}/affected.json | jq -cr
          echo -n '::set-output name=e2eMap::'
          cat ${{ runner.temp }}/affected-e2e-matrix.json | jq -cr

  build-storybook:
    name: Build Project Storybook
    runs-on: ubuntu-latest
    needs: install-deps
    strategy:
      matrix:
        project: ${{ fromJSON(needs.install-deps.outputs.projects) }}
    steps:
      - uses: actions/checkout@v3
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Retrieve dependencies cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            !node_modules/.cache/nx
            /home/runner/.cache/Cypress
          key: cache-pr-preview-${{ hashFiles('package-lock.json') }}
      - name: Retrieve nx cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules/.cache/nx
            dist
          key: cache-nx-storybook-${{ matrix.project }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            cache-nx-storybook-${{ matrix.project }}-
            cache-nx-storybook-
            cache-nx-
      - name: Build ${{ matrix.project }}
        run: |
          npx nx run ${{ matrix.project }}:build-storybook:ci --outputDir=dist/storybooks/${{ matrix.project }}
          npx sb extract ./dist/storybooks/${{ matrix.project }}
      - name: Upload storybook artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.project }}
          path: ./dist/storybooks/${{ matrix.project }}
          retention-days: 1
          if-no-files-found: error

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - install-deps
      - build-storybook
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Retrieve dependencies cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            !node_modules/.cache/nx
            /home/runner/.cache/Cypress
          key: cache-pr-preview-${{ hashFiles('package-lock.json') }}
      - name: Retrieve nx cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules/.cache/nx
            dist/storybook
          key: cache-nx-publish-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            cache-nx-publish-
            cache-nx-
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./dist/storybooks/
      - name: Build Storybook Composition
        run: |
          set -x
          echo '${{ needs.install-deps.outputs.projects }}' | jq -cr 'join(",")' > ${{ runner.temp }}/affected_projects.txt
          npx nx workspace-generator storybook-composition "$(<${{ runner.temp }}/affected_projects.txt)" --baseUrl ../storybooks/
          npx nx run storybook:build-storybook:ci --outputDir=dist/storybook
      - name: Create preview README.md
        run: |
          echo "# Sky UX Pull Request Preview" > ${{ runner.temp }}/README.md
          echo "" >> ${{ runner.temp }}/README.md
          echo "Preview build for [PR #${{ github.event.number }}](https://github.com/blackbaud/skyux/pull/${{ github.event.number }})" >> ${{ runner.temp }}/README.md
          echo "" >> ${{ runner.temp }}/README.md
          echo "[Storybook preview](https://blackbaud.github.io/skyux-pr-preview/${{ github.event.number }}/storybook/)" > ${{ runner.temp }}/pr_comment.md
          echo "" >> ${{ runner.temp }}/pr_comment.md
          echo 'Component Storybooks:' >> ${{ runner.temp }}/pr_comment.md
          echo "" >> ${{ runner.temp }}/pr_comment.md
          for dist in ./dist/storybooks/*
          do
            echo "- [$(basename $dist)](https://blackbaud.github.io/skyux-pr-preview/${{ github.event.number }}/storybooks/$(basename $dist)/)" >> ${{ runner.temp }}/pr_comment.md
          done
          cat ${{ runner.temp }}/pr_comment.md >> ${{ runner.temp }}/README.md
      - uses: actions/checkout@v3
        with:
          repository: ${{ env.GH_PAGES_OWNER }}/${{ env.GH_PAGES_REPO }}
          ref: 'main'
          fetch-depth: 1
          path: ${{ env.GH_PAGES_REPO }}
          token: ${{secrets.GH_PERSONAL_ACCESS_TOKEN}}
      - name: Remove old builds
        run: |
          set -x
          ls ./${{ env.GH_PAGES_REPO }} | grep -E '^[0-9]+$' | sort > ${{ runner.temp }}/current_builds.txt
          gh pr list -q '.[] | .number' --state open --json number | tr -d ' ' | sort > ${{ runner.temp }}/expected_builds.txt
          if [[ -s "${{ runner.temp }}/current_builds.txt" && -s "${{ runner.temp }}/expected_builds.txt" ]]
          then
            # Get current builds that are not in expected.
            comm -23 ${{ runner.temp }}/current_builds.txt ${{ runner.temp }}/expected_builds.txt | tr -d ' ' > ${{ runner.temp }}/old_builds.txt
            if [[ -s "${{ runner.temp }}/old_builds.txt" ]]
            then
              git -C ./${{ env.GH_PAGES_REPO }} rm -r -f --pathspec-from-file=${{ runner.temp }}/old_builds.txt
            else
              echo "All builds are current"
            fi
          else
            echo "Nothing to remove"
          fi
        env:
          GITHUB_TOKEN: ${{secrets.GH_PERSONAL_ACCESS_TOKEN}}
      - name: Update build
        run: |
          set -x
          rm -rf ./${{ env.GH_PAGES_REPO }}/${{ github.event.number }}
          mkdir -p ./${{ env.GH_PAGES_REPO }}/${{ github.event.number }}/storybook
          mv ${{ runner.temp }}/README.md ./${{ env.GH_PAGES_REPO }}/${{ github.event.number }}/
          cp -R ./dist/storybook ./dist/storybooks ./${{ env.GH_PAGES_REPO }}/${{ github.event.number }}/
      - name: Commit build to GH Pages
        run: |
          set -x
          git config --global user.name "Blackbaud Sky Build User"
          git config --global user.email "sky-build-user@blackbaud.com"
          git -C ./${{ env.GH_PAGES_REPO }} add --all
          git -C ./${{ env.GH_PAGES_REPO }} status
          if [[ -n "$(git -C ./${{ env.GH_PAGES_REPO }} status -s)" ]]
          then
            git -C ./${{ env.GH_PAGES_REPO }} commit -m "$(printf 'skyux %b%d commit %s' '\043' ${{ github.event.number }} ${GITHUB_SHA:0:8})"
            git -C ./${{ env.GH_PAGES_REPO }} push
          else
            echo "No changes"
          fi
      - name: Comment on PR
        run: |
          set -x
          COMMENT_ID="$(gh api -H "Accept: application/vnd.github.v3+json" /repos/blackbaud/skyux/issues/${{ github.event.number }}/comments | jq -r '.[] | select(.body | startswith("[Storybook preview]")) | .id')"
          if [[ -z "${COMMENT_ID}" ]]
          then
            gh pr comment ${{ github.event.number }} -F ${{ runner.temp }}/pr_comment.md
          else
            jq -r --null-input --arg body "$(cat ${{ runner.temp }}/pr_comment.md)" '{"body": $body}' > ${{ runner.temp }}/pr_comment.json
            gh api --method PATCH -H "Accept: application/vnd.github.v3+json" /repos/blackbaud/skyux/issues/comments/${COMMENT_ID} --input ${{ runner.temp }}/pr_comment.json
          fi
        env:
          GITHUB_TOKEN: ${{secrets.GH_PERSONAL_ACCESS_TOKEN}}
      - name: Verify GH Pages
        run: |
          if [[ "$(./scripts/wait-for-gh-pages.sh ${{ env.GH_PAGES_REPO }} || true)" != "OK" ]]
          then
            git -C ./skyux-pr-preview commit --allow-empty -m "Trigger rebuild"
            git -C ./skyux-pr-preview push
            if [[ "$(./scripts/wait-for-gh-pages.sh ${{ env.GH_PAGES_REPO }} || true)" != "OK" ]]
            then
              echo "Unable to verify GitHub Pages."
              exit 1
            fi
          fi
        env:
          GITHUB_TOKEN: ${{secrets.GH_PERSONAL_ACCESS_TOKEN}}

  e2e:
    name: End to end tests
    runs-on: ubuntu-latest
    needs:
      - install-deps
      - publish
    strategy:
      matrix: ${{ fromJSON(needs.install-deps.outputs.e2eMap) }}
    steps:
      - uses: actions/checkout@v3
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Retrieve dependencies cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            !node_modules/.cache/nx
            /home/runner/.cache/Cypress
          key: cache-pr-preview-${{ hashFiles('package-lock.json') }}
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Percy ${{ matrix.project }}
        run: npx percy exec -- nx run ${{ matrix.project }}-e2e:e2e:ci --skip-nx-cache --baseUrl https://blackbaud.github.io/skyux-pr-preview/${{ github.event.number }}/storybooks/${{ matrix.project }}/
        env:
          PERCY_TOKEN: ${{ secrets[matrix.token] }}
